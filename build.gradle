/*
 * The MIT License
 *
 * Copyright (c) 2020 Nefele <https://github.com/nefele-org>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

import org.gradle.internal.jvm.Jvm


plugins {
    id 'c'
    id 'java'
    id 'application'
    id 'idea'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}


group 'org.nefele'
version '1.0-SNAPSHOT'


sourceCompatibility = 11
targetCompatibility = 11
mainClassName = 'Program'

sourceSets.main.resources.srcDirs  = [ "src/main/resources" ]
sourceSets.main.resources.includes = [ "**/*.*", "**/*.mp3" ]

repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    compile 'com.jfoenix:jfoenix:9.0.8'
    compile 'de.jensd:fontawesomefx-commons:11.0'
    compile 'de.jensd:fontawesomefx-controls:11.0'
    compile 'de.jensd:fontawesomefx-fontawesome:4.7.0-11'
    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-9.1.2'
    compile 'de.jensd:fontawesomefx-materialdesignfont:2.0.26-9.1.2'
    compile 'com.dropbox.core:dropbox-core-sdk:3.1.3'
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    compile 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8'
    compile 'org.xerial:sqlite-jdbc:3.8.11.2'
    compile 'javazoom:jlayer:1.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

}

test {
    useJUnitPlatform()
}

javafx {
    version = "14"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media' ]
}


model {

    platforms {
        x64 {
            architecture "x64"
        }
    }

    components {
        hello(NativeLibrarySpec) {
            binaries.all {
                cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                cCompiler.args '-I', "${Jvm.current().javaHome}/include/linux"
                cCompiler.args '-D_FILE_OFFSET_BITS=64'
            }
        }
    }

}

run {

    jvmArgs = [
            "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED",
            "--add-exports=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
            "--add-exports=javafx.base/com.sun.javafx.binding=ALL-UNNAMED",
            "--add-exports=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED",
            "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED",
            "--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
            "--add-opens", "javafx.graphics/javafx.css=ALL-UNNAMED"
    ]

}

jar {
    manifest {
        attributes  'Main-Class' : 'Program',
                    'Name' : 'org/nefele/',
                    'Sealed' : 'true'
    }

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

